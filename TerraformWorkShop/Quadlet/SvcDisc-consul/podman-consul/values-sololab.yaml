global:
  imageRegistry: zot.day0.sololab
consul:
  containerPorts:
    - name: server
      containerPort: 8300
      hostPort: 8300
      protocol: TCP
    - name: serf_lan-tcp
      containerPort: 8301
      hostPort: 8301
      protocol: TCP
    - name: serf_lan-udp
      containerPort: 8301
      hostPort: 8301
      protocol: UDP
    - name: http
      containerPort: 8500
      hostPort: 8500
      protocol: TCP
    - name: https
      containerPort: 8501
      hostPort: 8501
      protocol: TCP
    - name: grpc_tls
      containerPort: 8503
      hostPort: 8503
      protocol: TCP
    - name: dns-udp
      containerPort: 8600
      hostPort: 8600
      protocol: UDP
    - name: dns-tcp
      containerPort: 8600
      hostPort: 8600
      protocol: TCP
  ## @param consul.configFiles
  configFiles:
    general:
      ports:
        https: 8501
      # https://github.com/hashicorp/learn-consul-docker/blob/110bc9484b0dcd714e64604cd011a360d03b9bc6/datacenter-deploy-auto-config/vault/consul/server2.json#L33
      auto_config:
        authorization:
          enabled: true
          static:
            oidc_discovery_url: https://vault.day1.sololab:8200/v1/identity/oidc
            oidc_discovery_ca_cert: ## set via helm value
            bound_issuer: https://vault.day1.sololab:8200/v1/identity/oidc
            bound_audiences:
              - consul-cluster-dc1
            claim_mappings:
              /consul/hostname: node_name
            claim_assertions:
              - value.node_name == "${node}"
    acl:
      acl:
        enabled: true
        default_policy: deny
        enable_token_persistence: true
        tokens:
          initial_management: e95b599e-166e-7d80-08ad-aee76e7ddf19
          agent: e95b599e-166e-7d80-08ad-aee76e7ddf19
          config_file_service_registration: e95b599e-166e-7d80-08ad-aee76e7ddf19
    encryption:
      encrypt: aPuGh+5UDskRAbkLaXRzFoSOcSM+5vAK+NEYOWHJH7w=
    tls:
      tls:
        defaults:
          ca_file: /consul/config/certs/ca.crt
          cert_file: /consul/config/certs/server.crt
          key_file: /consul/config/certs/server.key
          verify_incoming: false
          verify_outgoing: true
        internal_rpc:
          verify_server_hostname: true
  ## @param consul.command Override default container command (useful when using custom images)
  ## ref: https://github.com/hashicorp/consul/blob/main/.release/docker/docker-entrypoint.sh#L75
  ## this command is used to set the advertise ip to host ip when consul start
  ## in detail, this script insert "-advertise=<host ip>" in the next line of string "$CONSUL_BIND \"
  ## before:
  ## set -- consul agent \
  ##   -data-dir="$CONSUL_DATA_DIR" \
  ##   -config-dir="$CONSUL_CONFIG_DIR" \
  ##   $CONSUL_BIND \
  ##   $CONSUL_CLIENT \
  ##   "$@"
  ##
  ## after:
  ## set -- consul agent \
  ##   -data-dir="$CONSUL_DATA_DIR" \
  ##   -config-dir="$CONSUL_CONFIG_DIR" \
  ##   $CONSUL_BIND \
  ##   -advertise=<host ip> \
  ##   $CONSUL_CLIENT \
  ##   "$@"
  ## why not pass the advertise ip into args?
  ## args only accept plain text command, not accept variable which come with expression
  ##
  command:
    - "/bin/sh"
    - "-c"
    - |
      sed -e '/$CONSUL_BIND \\/i\' -e '    -advertise=$(getent hosts host.containers.internal | awk '\''{print $1}'\'') \\' /usr/local/bin/docker-entrypoint.sh > /tmp/docker-entrypoint.sh
      chmod +x /tmp/docker-entrypoint.sh
      exec /tmp/docker-entrypoint.sh "$0" "$@"

  ## @param consul.podAnnotations Annotations for consul pods
  ## to keep container user as same permission as host user, set keep-id point to the container user and group id
  ## the userns annotation only work podman v4.9+
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ## ref: https://github.com/containers/podman/discussions/22378
  ## ref: https://github.com/hashicorp/consul/blob/v1.20.2/Dockerfile#L271-L273
  ## e.g.
  ## podAnnotations:
  ##   io.podman.annotations.userns: keep-id:uid=100,gid=1000
  ##
  podAnnotations:
    io.podman.annotations.userns: keep-id:uid=100,gid=1000
  # ## @param consul.sidecars Add additional sidecar containers to the consul pod(s)
  # ## e.g:
  # ## sidecars:
  # ##   - name: your-image-name
  # ##     image: your-image
  # ##     imagePullPolicy: Always
  # ##     ports:
  # ##       - name: portname
  # ##         containerPort: 1234
  # ##
  # sidecars:
  #   - name: rsync
  #     image: zot.day0.sololab/instrumentisto/rsync-ssh:alpine3.21
  #     imagePullPolicy: IfNotPresent
  #     command:
  #       - /bin/sh
  #       - -c
  #       - "rsync -av --include 'Service*' --exclude '*' --delete /consul-service/ /consul-data/"
