[Unit]
Description="Traefik Proxy"
Documentation=https://docs.traefik.io
After=http.socket https.socket traefik.socket
Requires=http.socket https.socket traefik.socket

[Service]
Sockets=http.socket https.socket
ExecStartPre=bash -c "podman secret exists traefik-sec-ca && podman secret rm traefik-sec-ca; echo \"${ca}\" | base64 -d | podman secret create traefik-sec-ca -"

[Container]
ContainerName=traefik

Image=zot.day0.sololab/library/traefik:v3.3

SecurityLabelType=spc_t

Environment=TZ=Asia/Shanghai
Environment=LEGO_CA_CERTIFICATES=/etc/traefik/tls/ca.crt
Environment=LEGO_CA_SYSTEM_CERT_POOL=true

Exec=--accessLog=true \
  --accessLog.addInternals=true \
  --api=true \
  --api.dashboard=true \
  --certificatesResolvers.external.acme.caServer=https://acme-v02.api.letsencrypt.org/directory \
  --certificatesResolvers.external.acme.certificatesDuration=2160 \
  --certificatesResolvers.external.acme.storage=/mnt/acmeStorage/external.json \
  --certificatesResolvers.external.acme.tlsChallenge=true \
  --certificatesResolvers.internal.acme.caServer=https://vault.day1.sololab:8200/v1/pki/day1/acme/directory \
  --certificatesResolvers.internal.acme.certificatesDuration=2160 \
  --certificatesResolvers.internal.acme.storage=/mnt/acmeStorage/internal.json \
  --certificatesResolvers.internal.acme.tlsChallenge=true \
  --entrypoints.traefik.address=:8080 \
  --entrypoints.web.address=:80 \
  --entrypoints.web.forwardedHeaders.trustedIPs=0.0.0.0/0 \
  --entrypoints.webSecure.address=:443 \
  --entrypoints.webSecure.forwardedHeaders.trustedIPs=0.0.0.0/0 \
  --global.checkNewVersion=false \
  --global.sendAnonymousUsage=false \
  --log.level=DEBUG \
  --ping=true \
  --providers.consulCatalog=true \
  --providers.consulCatalog.endpoint.address=consul.day1.sololab:8501 \
  --providers.consulCatalog.endpoint.dataCenter=dc1 \
  --providers.consulCatalog.endpoint.scheme=https \
  --providers.consulCatalog.endpoint.tls.ca=/etc/traefik/tls/ca.crt \
  --providers.consulcatalog.exposedByDefault=false \
  --providers.docker=true \
  --providers.docker.endpoint=unix:///var/run/docker.sock \
  --providers.docker.exposedByDefault=false \
  --serversTransport.insecureSkipVerify=false \
  --serversTransport.rootCAs=/etc/traefik/tls/ca.crt

Secret=source=traefik-sec-ca,target=/etc/traefik/tls/ca.crt

Volume=%t/podman/podman.sock:/var/run/docker.sock
Volume=traefik-pvc:/mnt/acmeStorage

Label='traefik.enable=true'
Label='traefik.http.middlewares.userPass.basicauth.users=admin:$apr1$/F5ai.wT$7nFJWh4F7ZA0qoY.JZ69l1'
Label='traefik.http.routers.dashboard-redirect.entrypoints=web'
Label='traefik.http.middlewares.toHttps.redirectscheme.scheme=https'
Label='traefik.http.middlewares.toHttps.redirectscheme.permanent=true'
Label='traefik.http.routers.dashboard-redirect.middlewares=toHttps@docker'
Label='traefik.http.routers.dashboard-redirect.middlewares=toHttps@docker'
Label='traefik.http.routers.dashboard-redirect.middlewares=toHttps@docker'
Label='traefik.http.routers.dashboard-redirect.rule=Host(`traefik.day1.sololab`) && (PathPrefix(`/api`)|| PathPrefix(`/dashboard`))'
Label='traefik.http.routers.dashboard.entryPoints=webSecure'
Label='traefik.http.routers.dashboard.middlewares=userPass@docker'
Label='traefik.http.routers.dashboard.rule=Host(`traefik.day1.sololab`) && (PathPrefix(`/api`)|| PathPrefix(`/dashboard`))'
Label='traefik.http.routers.dashboard.service=api@internal'
Label='traefik.http.routers.dashboard.tls=true'

SecurityLabelDisable=true
HealthCmd=["traefik", "healthcheck"]
HealthStartPeriod=3m
HealthInterval=600s
HealthTimeout=30s
HealthRetries=10
# Notify=healthy

PodmanArgs=${PodmanArgs}
Network=${Network}
[Install]
WantedBy=default.target