# https://github.com/kubernetes/dashboard/blob/master/aio/deploy/helm-chart/kubernetes-dashboard/values.yaml
# Additional container arguments
# replicaCount: 3

extraArgs:
# https://github.com/kubernetes/dashboard/blob/master/docs/user/access-control/README.md#login-view
  - --enable-skip-login
  - --system-banner="Welcome to SoloLab"

ingress:
  ## If true, Kubernetes Dashboard Ingress will be created.
  ##
  enabled: true
  ## Kubernetes Dashboard Ingress annotations
  annotations:
    kubernetes.io/ingress.class: traefik
    cert-manager.io/cluster-issuer: issuer-ca
    # https://www.ziji.work/ingress/traefik-route-traefik-middlewares-configure.html
    # 指定使用的 Middleware，规则是 {namespace名称}-{middleware名称}@{资源类型}，如果使用多个中间件，则逗号隔开
    traefik.ingress.kubernetes.io/router.middlewares: traefik-subpath-stripprefixregex@kubernetescrd
  ## Kubernetes Dashboard Ingress paths
  ## Both `/` and `/*` are required to work on gce ingress.
  paths:
    - /sub-k8sdashboard/
      # pathType: ImplementationSpecific
  hosts:
    - solo.lab
  ## Kubernetes Dashboard Ingress TLS configuration
  ## Secrets must be manually created in the namespace
  ##
  tls:
    - secretName: solo.lab
      hosts:
        - solo.lab

metricsScraper:                
  enabled: true

rbac:
  # The basic idea of the clusterReadOnlyRole
  # is not to hide all the secrets and sensitive data but more
  # to avoid accidental changes in the cluster outside the standard CI/CD.
  #
  # It is NOT RECOMMENDED to use this version in production.
  # Instead you should review the role and remove all potentially sensitive parts such as
  # access to persistentvolumes, pods/log etc.
  #
  # Independent from rbac.create parameter.
  clusterReadOnlyRole: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: k8s-dashboard