# code: language=ansible
---
- name: Set podman socket service (systemd)
  when: 
    - ansible_service_mgr == "systemd"
  block:
    - name: Set systemd user scope podman socket service
      ansible.builtin.systemd:
        name: podman.socket
        enabled: "{{ service_podman_user.socket_enabled }}"
        state: "{{ service_podman_user.socket_state }}"
        scope: user
      become_user: "{{ target_user }}"
      when:
        - service_podman_user.socket_enabled is true
        

    - name: Set systemd system scope podman socket service
      ansible.builtin.systemd:
        name: podman.socket
        enabled: "{{ service_podman_system.socket_enabled }}"
        state: "{{ service_podman_system.socket_state }}"
        scope: system
      when:
        - service_podman_system.socket_enabled is true

# https://github.com/ahwayakchih/nobbic/blob/82509c475de075670de910f56b550709c4665e08/docs/SetupPodmanOnAlpineHost.markdown
- name: Set podman socket service (openrc)
  when:
    - ansible_service_mgr == "openrc"
  block:
    - name: config openrc script folder in home directory
      ansible.builtin.file:
        path: "/home/{{ target_user }}/{{ role_spec_name }}/openrc"
        state: "{{ service_podman_user.socket_openrc_directory }}"
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: u=rwx,g=r,o=rx
      when:
        - service_podman_user.socket_enabled is true

    # https://gitlab.alpinelinux.org/alpine/aports/-/blob/master/community/podman/podman.initd
    # https://gitlab.alpinelinux.org/alpine/aports/-/blob/master/community/podman/podman.confd
    # https://virtualzone.de/posts/openrc-podman-kube-play/
    - name: Deploy podman rootless socket service related openrc script and config
      ansible.builtin.template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ target_user }}"
        group: "{{ target_user }}"
        mode: u=rwx,g=r,o=r
      with_items:
        - src: podman-rootless-socket.confd.j2
          dest: "/home/{{ target_user }}/{{ role_spec_name }}/openrc/podman-rootless-{{ target_user }}-socket.confd"
      become_user: "{{ target_user }}"
      when:
        - service_podman_user.socket_enabled is true

    - name: Delete podman rootless socket service related openrc script and config
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: "{{ item.state }}"
      with_items:
        # https://wiki.archlinux.org/title/Cgroups
        - path: "/home/{{ target_user }}/{{ role_spec_name }}/openrc/"
          state: absent
      when:
        - service_podman_user.socket_enabled is false

    - name: Link podman rootless socket service related openrc script
      ansible.builtin.file:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        state: link
      with_items:
        - {
          src: "/etc/init.d/podman",
          dest: "/etc/init.d/podman-rootless-{{ target_user }}-socket"
        }
        - {
          src: "/home/{{ target_user }}/{{ role_spec_name }}/openrc/podman-rootless-{{ target_user }}-socket.confd",
          dest: "/etc/conf.d/podman-rootless-{{ target_user }}-socket"
        }
      when:
        - service_podman_user.socket_enabled is true

    - name: Unlink podman rootless socket service related openrc script
      ansible.builtin.file:
        path: "{{ item.dest }}"
        state: absent
      with_items:
        - {
          dest: "/etc/init.d/podman-rootless-{{ target_user }}-socket"
        }
        - {
          dest: "/etc/conf.d/podman-rootless-{{ target_user }}-socket"
        }
      when:
        - service_podman_user.socket_enabled is false

    # https://gist.github.com/danmack/53eaea4353d6b3dcfd20238741557290
    - name: Set openrc podman rootless socket service
      ansible.builtin.service:
        name: "podman-rootless-{{ target_user }}-socket"
        enabled: "{{ service_podman_user.socket_enabled }}"
        state: "{{ service_podman_user.socket_state }}"
      when:
        - service_podman_user.socket_enabled != "skipped"
    
    - name: Set openrc podman root socket service
      ansible.builtin.service:
        name: podman
        enabled: "{{ service_podman_system.socket_enabled }}"
        state: "{{ service_podman_system.socket_state }}"
      when:
        - service_podman_system.socket_enabled != "skipped"
