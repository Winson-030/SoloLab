# code: language=ansible
---
- name: Delegate container related permission to non-root user (systemd)
  when: 
    - ansible_service_mgr == "systemd"
  block:
    - name: Set cgroup delegation to all users
      become: true
      when:
        - definitive_cgroups_delegation.all_users.skipped is false
      block:
        - name: Detect file state for all users
          ansible.builtin.stat:
            path: /etc/systemd/system/user@.service.d/delegate.conf
          register: systemd_all_users_serviced
          when:
            - definitive_cgroups_delegation.all_users.state == "present"

        - name: Create /etc/systemd/system/user@.service.d/delegate.conf
          ansible.builtin.file:
            path: "{{ item.path }}"
            state: "{{ item.state }}"
            mode: '0755'
          loop:
            # https://wiki.archlinux.org/title/Cgroups
            - path: "/etc/systemd/system/user@.service.d"
              state: directory
            - path: "/etc/systemd/system/user@.service.d/delegate.conf"
              state: touch
          when:
            - definitive_cgroups_delegation.all_users.state == "present"
            - systemd_all_users_serviced.stat.exists is defined
            - systemd_all_users_serviced.stat.exists is false

        - name: Detect systemd_cgroup_delegate_block in /etc/systemd/system/user@.service.d/delegate.conf
          ansible.builtin.blockinfile:
            path: /etc/systemd/system/user@.service.d/delegate.conf
            marker: "# {mark} {{ role_name }} systemd_cgroup_delegate"
            state: absent
          check_mode: true
          changed_when: false
          register: systemd_cgroup_delegate_block

        - name: Detect [Service] line in /etc/systemd/system/user@.service.d/delegate.conf
          ansible.builtin.lineinfile:
            path: /etc/systemd/system/user@.service.d/delegate.conf
            regexp: "^[Service]"
            state: absent
          check_mode: true
          changed_when: false
          register: systemd_cgroup_service_line

        - name: Detect Delegate= line in /etc/systemd/system/user@.service.d/delegate.conf
          ansible.builtin.lineinfile:
            path: /etc/systemd/system/user@.service.d/delegate.conf
            regexp: "^Delegate="
            state: absent
          check_mode: true
          changed_when: false
          register: systemd_cgroup_delegate_line

        - name: Comment out [Service] and Delegate line in /etc/systemd/system/user@.service.d/delegate.conf
          ansible.builtin.replace:
            path: /etc/systemd/system/user@.service.d/delegate.conf 
            regexp: "{{ item }}"
            replace: '# comment by {{ role_name }} \1'
          loop:
            - '^\s*(\[Service\])'
            - '^\s*(Delegate=.*)'
          when:
            - definitive_cgroups_delegation.all_users.state == "present"
            - cgroups_delegation.all_users.present_override is true

        - name: Set systemd service unit cgroup Delegate block for all users
          ansible.builtin.blockinfile:
            # https://wiki.archlinux.org/title/Cgroups#Controller_types
            path: /etc/systemd/system/user@.service.d/delegate.conf
            marker: "# {mark} {{ role_name }} systemd_cgroup_delegate"
            insertafter: '\[Service\]$'
            block: |
              [Service]
              Delegate={{ cgroups_delegation.all_users.resources }}
          when:
            - definitive_cgroups_delegation.all_users.state == "present"
            - not (
                cgroups_delegation.all_users.present_override is false
                and not 'Block removed' in systemd_cgroup_delegate_block.msg
                and systemd_cgroup_delegate_line.found is defined
                and systemd_cgroup_delegate_line.found != 0
              )
          notify: 
            - Reload-SystemdDaemon

        - name: Remove systemd_cgroup_delegate_block
          ansible.builtin.blockinfile:
            path: /etc/systemd/system/user@.service.d/delegate.conf
            marker: "# {mark} {{ role_name }} systemd_cgroup_delegate"
            state: absent
          when:
            - definitive_cgroups_delegation.all_users.state == "absent"
          notify: 
            - Reload-SystemdDaemon

        - name: Uncomment [Service] and Delegate line /etc/rc.conf
          ansible.builtin.replace:
            path: /etc/systemd/system/user@.service.d/delegate.conf
            regexp: "{{ item }}"
            replace: '\1'
          loop:
            - '^\s*# comment by {{ role_name }} (\[Service\])'
            - '^\s*# comment by {{ role_name }} (Delegate=.*)'
          when:
            - definitive_cgroups_delegation.all_users.state == "absent" 


    - name: Set cgroup delegation to {{ target_user }}
      become: true
      when:
        - definitive_cgroups_delegation.per_user.skipped is false
      block:
        - name: Detect {{ target_user }} uid
          ansible.builtin.shell: 
            cmd: id -u
          become_user: "{{ target_user }}"
          register: target_user_uid
          changed_when: false

        # https://wiki.archlinux.org/title/Cgroups#User_delegation
        - name: Detect file state for {{ target_user }}
          ansible.builtin.stat:
            path: /etc/systemd/system/user@{{ target_user_uid.stdout }}.service.d/delegate-{{ role_name }}.conf
          register: systemd_per_user_serviced

        - name: Create /etc/systemd/system/user@"{{ target_user_uid.stdout }}".service.d/delegate-{{ role_name }}.conf
          ansible.builtin.file:
            path: "{{ item.path }}"
            state: "{{ item.state }}"
            mode: '0755'
          loop:
            # https://wiki.archlinux.org/title/Cgroups
            - path: "/etc/systemd/system/user@{{ target_user_uid.stdout }}.service.d"
              state: directory
            - path: "/etc/systemd/system/user@{{ target_user_uid.stdout }}.service.d/delegate-{{ role_name }}.conf"
              state: touch
          when:
            - systemd_per_user_serviced.stat.exists is defined
            - systemd_per_user_serviced.stat.exists is false
            - definitive_cgroups_delegation.per_user.state == "present"

        - name: Enable resources delegation for {{ target_user }}
          ansible.builtin.blockinfile:
            # https://wiki.archlinux.org/title/Cgroups#Controller_types
            path: "/etc/systemd/system/user@{{ target_user_uid.stdout }}.service.d/delegate-{{ role_name }}.conf"
            marker: "# {mark} {{ role_name }} delegation"
            block: |
              [Service]
              Delegate={{ cgroups_delegation.per_user.resources }}
          when:
            - definitive_cgroups_delegation.per_user.state == "present"
          notify: 
            - Reload-SystemdDaemon

        - name: Delete /etc/systemd/system/user@"{{ target_user_uid.stdout }}".service.d/delegate-{{ role_name }}.conf
          ansible.builtin.file:
            path: "/etc/systemd/system/user@{{ target_user_uid.stdout }}.service.d/delegate-{{ role_name }}.conf"
            state: absent
          when:
            - definitive_cgroups_delegation.per_user.state == "absent"
          notify: 
            - Reload-SystemdDaemon
        

  # https://github.com/ahwayakchih/nobbic/blob/82509c475de075670de910f56b550709c4665e08/docs/SetupPodmanOnAlpineHost.markdown#switch-cgroups-to-v2
- name: Set cgroup resource config to all user (openrc)
  when: 
    - ansible_service_mgr == "openrc"
    - definitive_cgroups_delegation.all_users.skipped is false
  become: true
  block:
    # Detect blocks
    - name: Detect rc_cgroup_mode block in /etc/rc.conf
      ansible.builtin.blockinfile:
        path: /etc/rc.conf
        marker: "# {mark} {{ role_name }} rc_cgroup_mode"
        state: absent
      check_mode: true
      changed_when: false
      register: rc_cgroup_mode_block

    - name: Detect rc_cgroup_controllers block in /etc/rc.conf
      ansible.builtin.blockinfile:
        path: /etc/rc.conf
        marker: "# {mark} {{ role_name }} rc_cgroup_controllers"
        state: absent
      check_mode: true
      changed_when: false
      register: rc_cgroup_controllers_block

    # Detect lines
    - name: Detect rc_cgroup_mode line in /etc/rc.conf
      ansible.builtin.lineinfile:
        path: /etc/rc.conf
        regexp: "^rc_cgroup_mode"
        state: absent
      check_mode: true
      changed_when: false
      when:
        - "not 'Block removed' in rc_cgroup_mode_block.msg"
      register: rc_cgroup_mode_line

    - name: Detect rc_cgroup_controllers line in /etc/rc.conf
      ansible.builtin.lineinfile:
        path: /etc/rc.conf
        regexp: "^rc_cgroup_controllers"
        state: absent
      check_mode: true
      changed_when: false
      when:
        - "not 'Block removed' in rc_cgroup_controllers_block.msg"
      register: rc_cgroup_controllers_line

    # Comment out origin one
    # https://www.shellhacks.com/ansible-comment-out-uncomment-lines-in-a-file/
    - name: Comment out rc_cgroup_mode and rc_cgroup_controllers line in /etc/rc.conf
      ansible.builtin.replace:
        path: /etc/rc.conf
        regexp: "{{ item }}"
        replace: '# comment by {{ role_name }} \1'
      loop:
        - '^\s*(rc_cgroup_mode=.*)'
        - '^\s*(rc_cgroup_controllers=.*)'
      when:
        - definitive_cgroups_delegation.all_users.state == "present"
        - cgroups_delegation.all_users.present_override is true

    # Set block
    - name: Set rc_cgroup_mode block
      ansible.builtin.blockinfile:
        path: /etc/rc.conf
        marker: "# {mark} {{ role_name }} rc_cgroup_mode"
        insertafter: '^#rc_cgroup_mode=(.*)'
        block: rc_cgroup_mode="unified"
        state: present
      when:
        - definitive_cgroups_delegation.all_users.state == "present"
        - not (
            cgroups_delegation.all_users.present_override is false
            and not 'Block removed' in rc_cgroup_mode_block.msg
            and rc_cgroup_mode_line.found is defined
            and rc_cgroup_mode_line.found != 0
          )

    - name: Set rc_cgroup_controllers block
      ansible.builtin.blockinfile:
        path: /etc/rc.conf
        marker: "# {mark} {{ role_name }} rc_cgroup_controllers"
        insertafter: '^#rc_cgroup_controllers(.*)'
        block: rc_cgroup_controllers="{{ definitive_cgroups_delegation.all_users.resources }}"
        state: present
      when:
        - definitive_cgroups_delegation.all_users.state == "present"
        - not ( 
            cgroups_delegation.all_users.present_override is false
            and not 'Block removed' in rc_cgroup_controllers_block.msg
            and rc_cgroup_controllers_line.found is defined
            and rc_cgroup_controllers_line.found != 0
          )

    # remove block
    - name: Remove rc_cgroup_mode and rc_cgroup_controllers block
      ansible.builtin.blockinfile:
        path: /etc/rc.conf
        marker: "# {mark} {{ role_name }} {{ item }}"
        state: absent
      loop:
        - rc_cgroup_mode
        - rc_cgroup_controllers
      when:
        - definitive_cgroups_delegation.all_users.state == "absent"

    # uncomment line 
    - name: Uncomment rc_cgroup_mode and rc_cgroup_controllers line in /etc/rc.conf
      ansible.builtin.replace:
        path: /etc/rc.conf
        regexp: '^\s*# comment by {{ role_name }} (rc_cgroup_mode=.*)'
        replace: '\1'
      loop:
        - (rc_cgroup_mode=.*)
        - (rc_cgroup_controllers=.*)
      when:
        - definitive_cgroups_delegation.all_users.state == "absent"

