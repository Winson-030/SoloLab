# code: language=ansible
---
# vars file for ansible-podman-rootless-provision

# podman package state,
# 3 states of vars_package.podman_state: present, absent, skipped
# vars_package.podman_state: present
#   install podman package
# vars_package.podman_state: absent
#   uninstall podman package
# vars_package.podman_state: skipped
#   skip the implement the podman package task
vars_package:
  podman:
    state: present


# target user to setup rootless podman
target_user: "{{ ansible_user }}"


# background: 
#    https://github.com/containers/podman/blob/main/troubleshooting.md#26-running-containers-with-resource-limits-fails-with-a-permissions-error
# 3 states of vars_cgroups_delegation: present, absent, skipped
# vars_cgroups_delegation.state: present
#   config cgroup with this role own partten
# vars_cgroups_delegation.state: absent
#   remove cgroup config with this role own partten (if there)
# vars_cgroups_delegation.state: skipped
#   skip the implement of cgroup config
# note: if podman package is not there, the cgroup delegate file create by this role 
#   will also be delete
vars_cgroups_delegation:
  state: present
  resources: cpu cpuset io memory pids
  # rc_conf_override only work for the linux distro with openrc init system, e.g. alpine linux and gentoo
  rc_conf_override: true


# background:
#   https://github.com/containers/podman/blob/main/troubleshooting.md#5-rootless-containers-cannot-ping-hosts
#   https://github.com/containers/podman/blob/main/rootless.md#:~:text=Podman%20can%20not%20create%20containers%20that%20bind%20to%20ports%20%3C%201024
# 3 states of vars_sysctl_params.state: present, absent, skipped
# vars_sysctl_params.state:present
#   create sysctl conf file for podman-rootless rootless
# vars_sysctl_params.state:absent
#   delete sysctl conf file for podman-rootless rootless
# vars_sysctl_params.state:skip
#   skip the implement of sysctl permission config task 
# note: if podman package is not there, the sysctl conf file create by this role 
#   will also be delete
vars_sysctl_params:
  state: present
  list:
    - name: net.ipv4.ping_group_range
      value: 0 2000000
    - name: net.ipv4.ip_unprivileged_port_start
      value: 53


# background:
#   https://github.com/containers/podman/blob/main/troubleshooting.md#10-rootless-setup-user-invalid-argument
# 3 states of vars_sub_ids.state: present, absent, skipped
# vars_sub_ids.state: present
#   /etc/sub<u,g>id file will be created if not exists,
#     if file exist, it will check with the user/group exists or not,
#       if user/group not exist, it will create new record for user/group
#       if user/group exists, it will not change anything
# vars_sub_ids.state: absent
#   the config create by this role in /etc/sub<u,g>ids file will be delete,
#   it will not delete if the config is not create by this role.
# vars_sub_ids.state: skipped
#   it will not check the state of /etc/sub<u,g>ids files or related config in the file.
# note: if podman package is not there, the config in sub<u,g>id create by this role 
#         will be delete
vars_sub_ids:
  state: present
  subuid:
    user: "{{ target_user }}"
    start_from: 100000
    offset: 65536
  subgid:
    group: "{{ target_user }}"
    start_from: 100000
    offset: 65536


# background:
#   https://github.com/containers/podman/commit/eab5a4cfb7b3bbb63cd2a1d9a5a69e9bc32d4cef#diff-d77924824df4702948dd3cfd6e377da2eb169d2811b4bfe072061f1f9aee48a0
#   https://virtualzone.de/posts/alpine-podman/#install-podman
# 3 states of vars_kernel_modules.state: present, absent, skipped
# vars_kernel_modules.state: present
#   enable podman rootless required kernel module(s) if they are not exist
#     if related kernel modules not exist, the task will create related drop-in config file /etc/modules-load.d/{{ role_name }}.conf 
#     to present the kernel modules
# vars_kernel_modules.state: absent
#   delete the related drop-in config file /etc/modules-load.d/{{ role_name }}.conf
# vars_kernel_modules.state: skipped
#   skip this task
vars_kernel_modules:
  state: present
  list:
    - ip_tables



vars_service:
  podman_socket:
    skipped: false
    user_scope: 
      enabled: true
      state: started
    system_scope: 
      enabled: false
      state: stopped
