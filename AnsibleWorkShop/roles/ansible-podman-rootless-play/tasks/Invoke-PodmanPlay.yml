# code: language=ansible
---
- name: Copy k8s yaml file to target host
  ansible.builtin.copy:
    src: "{{ podman_play.kube_file }}"
    dest: "~/.ansible/tmp/{{ podman_play.kube_file.split('/')[-1] }}"

- name: Run Podman kube play
  containers.podman.podman_play:
    authfile: "{{ podman_play.authfile | default(omit) }}"
    cert_dir: "{{ podman_play.cert_dir | default(omit) }}"
    configmap: "{{ podman_play.configmap | default(omit) }}"
    debug: "{{ podman_play.debug | default(omit) }}"
    executable: "{{ podman_play.executable | default(omit) }}"
    kube_file: "~/.ansible/tmp/{{ podman_play.kube_file.split('/')[-1] }}"
    log_driver: "{{ podman_play.log_driver | default(omit) }}"
    log_level: "{{ podman_play.log_level | default(omit) }}"
    network: "{{ podman_play.network | default(omit) }}"
    password: "{{ podman_play.password | default(omit) }}"
    quiet: "{{ podman_play.quiet | default(omit) }}"
    recreate: "{{ podman_play.recreate | default(omit) }}"
    seccomp_profile_root: "{{ podman_play.seccomp_profile_root | default(omit) }}"
    state: "{{ podman_play.state }}"
    tls_verify: "{{ podman_play.tls_verify | default(omit) }}"
    username: "{{ podman_play.username | default(omit) }}"
  when:
    - podman_play.state != "absent"

- name: Run podman kube down
  ansible.builtin.shell:
    cmd: podman kube down "~/.ansible/tmp/{{ podman_play.kube_file.split('/')[-1] }}"
  when:
    - podman_play.state == "absent"

- name: Delete tmp k8s yaml file
  ansible.builtin.file:
    path: "~/.ansible/tmp/{{ podman_play.kube_file.split('/')[-1] }}"
    state: absent
