# code: language=ansible
---
# vars file for ansible-podman-rootless-play

# containers.podman.podman_network
# https://docs.ansible.com/ansible/latest/collections/containers/podman/podman_network_module.html#ansible-collections-containers-podman-podman-network-module
vars_podman_network:
  debug: false
  disable_dns: false
  driver: bridge
  executable: podman
  gateway:
  internal: false
  ip_range:
  ipv6: false
  macvlan:
  name: # required, skip if empty
  opt:
  recreate: false
  state: 
  subnet:

# containers.podman.podman_volume
# https://docs.ansible.com/ansible/latest/collections/containers/podman/podman_volume_module.html#ansible-collections-containers-podman-podman-volume-module
vars_podman_volume:
  driver: local
  executable: podman
  label:
    app: 
  name: # required, skip if empty
  options:
    - o=timeout=10
  recreate: false
  state: 

# containers.podman.podman_play
# https://docs.ansible.com/ansible/latest/collections/containers/podman/podman_play_module.html#ansible-collections-containers-podman-podman-play-module
vars_podman_play:
  authfile: ${XDG_RUNTIME_DIR}/containers/auth.json
  cert_dir: /etc/containers/certs.d
  # https://stackoverflow.com/questions/41725555/how-to-use-omit-with-ansible-and-avoid-any-errors
  configmap:
    # - /path/to/configmap1
    # - /path/to/configmap2
  debug: false
  executable: podman
  kube_file: # required, skip if empty
  log_driver: journald
  log_level: error
  network:
    - podman
  password:
  quiet: false
  recreate: false
  seccomp_profile_root: /var/lib/kubelet/seccomp
  state: # required, skip if empty
  tls_verify: false
  username:
    
vars_pod_name: # required, Name of the pod to generate systemd unit file, skip if empty

# containers.podman.podman_generate_systemd
# https://docs.ansible.com/ansible/latest/collections/containers/podman/podman_generate_systemd_module.html#ansible-collections-containers-podman-podman-generate-systemd-module
# https://docs.podman.io/en/latest/markdown/podman-generate-systemd.1.html
vars_podman_generate_systemd:
  after:
  container_prefix: container
  dest: ~/.config/systemd/user/
  env:
  executable: podman
  name: "{{ vars_pod_name }}" # required, Name of the pod to generate systemd unit file, skip if empty
  new: false
  no_header: false
  pod_prefix: pod
  requires: 
  restart_policy: no-restart
  restart_sec: 
  separator: "-"
  start_timeout:
  stop_timeout:
  use_names: true
  wants: 

vars_service:
  podman_pod:
    user_scope:
      skipped: false
      enabled: true
      state: started
  systemd_lingering:
    state: enable