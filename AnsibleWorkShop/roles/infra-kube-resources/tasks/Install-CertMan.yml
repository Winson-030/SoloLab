# code: language=ansible
---
- name: Install Cert Manager
  block:
    - name: Add bitnami chart repo
      kubernetes.core.helm_repository:
        name: bitnami
        repo_url: "https://charts.bitnami.com/bitnami"

    - name: Install Cert Manager helm chart
      kubernetes.core.helm:
        kubeconfig: "{{ kubeconfig_path }}"
        chart_ref: bitnami/cert-manager
        release_name: cert-manager
        release_namespace: cert-manager
        create_namespace: yes
        wait: yes
        values:
          installCRDs: true
      register: certManHelm
      retries: 10
      until: certManHelm is not failed

    - name: Get ca crt
      become: yes
      ansible.builtin.slurp:
        path: "{{ ca_crt_path }}"
      register: crt
      delegate_to: "{{ kube_node }}"
      when: (certManHelm is succeeded)

    - name: Get ca key
      become: yes
      ansible.builtin.slurp:
        path: "{{ ca_key_path }}"
      register: key
      delegate_to: "{{ kube_node }}"
      when: (certManHelm is succeeded)

    # - name: Debug template
    #   # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/template_lookup.html
    #   ansible.builtin.debug: 
    #     msg: "{{ lookup('ansible.builtin.template', 'ca-key-pair.yaml.j2') | split('\n') | from_yaml }}"

    # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/find_module.html#ansible-collections-ansible-builtin-find-module
    - name: find all templates in directories
      ansible.builtin.find:
        paths: "{{ certman_resources_dir }}"
        file_type: file
        patterns: 'resource*'
        recurse: yes
      register: templates

    # https://github.com/BriceMichalski/mbcaas/blob/develop/roles/kube-core/tasks/production.yml
    # https://github.com/BonusPlay/infra/blob/63253142e5bd33880de2a976fb171fa8f797c139/roles/k8s/tasks/templates.yaml
    - name: Config Cert Manager additional resources (e.g. CA issuer)
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        template: "{{ item }}"
        namespace: cert-manager
      with_items: "{{ templates.files | map(attribute='path') }}"
      # https://docs.ansible.com/ansible/latest/user_guide/playbooks_conditionals.html#conditions-based-on-registered-variables
      when: (certManHelm is succeeded) and (crt is defined) and (key is defined)