# code: language=ansible
---
- hosts: "{{ target_host }}" # kube-2
  gather_facts: yes
  vars: 
    podman_rootless_play:
      vars_podman_host: "{{ target_host }}"
      vars_podman_uri:
        scheme_authority: http://d # http://d/ ← (default), https://docs.podman.io/en/latest/markdown/podman-system-service.1.html
        api_version: v4.4.1 # v4.0.0 ← (default)
        unix_socket: /run/user/1001/podman/podman.sock # socket file path for podman, e.g. /run/user/1000/podman/podman.sock
      vars_podman_play:
        state: absent # absent / present
        timeout: 600
        kube_file: 
          host: localhost
          # path: /KubeWorkShop/FreeIPA/aio-freeipa.yaml
          content: "{{ lookup('ansible.builtin.template', '/KubeWorkShop/FreeIPA/aio-freeipa.yaml') }}"
        absent:
          query_params:
            force: true
      vars_podman_generate_systemd:
        generate:
          path_params: 
            name: freeipa
          query_params:
            useName: true
      vars_service:
        podman_pod:
          user_scope:
            skipped: false
            enabled: true
            state: started
    healthcheck_container_name: freeipa-freeipa
  tasks:
     # https://docs.ansible.com/ansible/latest/user_guide/playbooks_reuse_roles.html#including-roles-dynamic-reuse
    - name: Invoke podman-rootless-play
      ansible.builtin.include_role:
        name: ansible-podman-rootless-play
      vars: 
        vars_podman_host: "{{ podman_rootless_play.vars_podman_host }}"
        vars_podman_uri: "{{ podman_rootless_play.vars_podman_uri }}"
        vars_podman_play: "{{ podman_rootless_play.vars_podman_play }}"
        vars_podman_generate_systemd: "{{ podman_rootless_play.vars_podman_generate_systemd }}"
        vars_service: "{{ podman_rootless_play.vars_service }}"

    - name: Test freeipa status 
      ansible.builtin.uri:
        url: http://d/{{ podman_rootless_play.vars_podman_uri.api_version }}/libpod/containers/{{ healthcheck_container_name }}/healthcheck
        unix_socket: "{{ podman_rootless_play.vars_podman_uri.unix_socket }}"
        method: GET
        status_code: 200
      register: result
      retries: 10
      until: result.json.Status == "healthy"
      delay: 30
      when: 
        - podman_rootless_play.vars_podman_play.state == 'present'

    - name: Update Host DNS setting
      become: true
      block:
        - name: add freeipa dns server to interface
          community.general.nmcli:
            conn_name: eth0
            type: ethernet
            dns4:
              - "{{ FreeIPA_container_hostIP }}"
            state: present
          when:
            - podman_rootless_play.vars_podman_play.state == 'present'

        - name: only keep default dns server to interface
          community.general.nmcli:
            conn_name: eth0
            type: ethernet
            dns4:
              - "{{ FreeIPA_dns_forwarder }}"
            state: present
          when:
            - podman_rootless_play.vars_podman_play.state == 'absent'
        
        # https://stackoverflow.com/questions/75258022/how-to-bring-up-an-interface-using-ansible-nmcli-module
        - name: bring up interface
          ansible.builtin.shell: 
            cmd: nmcli con up eth0