# code: language=ansible
---
- hosts: localhost
  gather_facts: false
  vars: 
    ipa:
      hostname: ipa.infra.sololab
      admin: admin
      admin_password: P@ssw0rd
    dns:
      zones:
        - name: infra.sololab.
          dns_update_policy: grant keySololab wildcard * ANY;
        - name: 255.168.192.in-addr.arpa.
          dns_update_policy: grant keySololab wildcard * ANY;
      records:
        - zone_name: infra.sololab
          record_name: ipa-ca
          record_type: 'A'
          record_value: '192.168.255.31'
  tasks:
    - name: Set IPA DNS zone
      ansible.builtin.include_tasks:
        file: Set-IPADNSZone.yml
      vars:
        ipa_dnszone: 
          name: "{{ item.name }}"
          dns_update_policy: "{{ item.dns_update_policy }}"
      loop: "{{ dns.zones }}"

    - name: Enable FreeIPA ACME
      delegate_to: kube-1
      block:
        - name: new podman exec session for freeipa
          ansible.builtin.uri:
            url: http://d/{{ api_version }}/libpod/containers/{{ container_name }}/exec
            unix_socket: /run/user/1000/podman/podman.sock
            method: POST
            status_code: 201
            body_format: json
            body: "{{ exec_create_request_body_dict }}"
          vars:
            api_version: v4.4.1
            container_name: freeipa-freeipa
            exec_create_request_body_dict:
              # AttachStderr: true
              # AttachStdin: true
              AttachStdout: true
              Cmd:
                - bash
                - -c
                # https://www.freeipa.org/page/V4/ACME#Feature_management
                - "echo 'P@ssw0rd' | kinit admin; ipa-acme-manage enable"
              Tty: true
              Privileged: false
              User: root
          register: exec_create_exec_respond

        - name: start podman exec session for freeipa
          ansible.builtin.uri:
            url: http://d/v4.4.1/libpod/exec/{{ exec_create_exec_respond.json.Id }}/start
            unix_socket: /run/user/1000/podman/podman.sock
            method: POST
            status_code: 200
            body_format: json
            body: "{{ exec_start_request_body_dict }}"
            # https://serverfault.com/questions/722852/how-to-check-the-json-response-from-a-uri-request-with-ansible
            return_content: true
          vars:
            exec_start_request_body_dict:
              Detach: false
              Tty: true
          register: exec_start_respond

        - name: debug
          debug:
            # var: exec_start_respond.content.stdout_lines
            msg: "{{ exec_start_respond.content.split('\r\n') }}"

        - name: update ipa-ca record
          community.general.ipa_dnsrecord:
            ipa_host: "{{ ipa.hostname }}"
            ipa_pass: "{{ ipa.admin_password }}"
            validate_certs: false
            zone_name: "{{ item.zone_name }}"
            record_name: "{{ item.record_name }}"
            record_type: "{{ item.record_type }}"
            record_value: "{{ item.record_value }}"
            state: present
          loop: "{{ dns.records }}"

    - name: create ldap object
      community.general.ldap_entry:
        server_uri: ldap://{{ ipa.hostname }}:389
        bind_dn: uid=admin,cn=users,cn=accounts,dc=infra,dc=sololab
        bind_pw: P@ssw0rd
        dn: uid=system,cn=sysaccounts,cn=etc,dc=infra,dc=sololab
        objectClass:
          - account
          - simpleSecurityObject
        attributes:
          uid: system
          userPassword: P@ssw0rd
          passwordExpirationTime: 20380119031407Z
          nsIdleTimeout: 0
        state: present

    - name: Set vyos dhcp ddns
      vyos.vyos.vyos_config :
        lines:
          # https://forum.vyos.io/t/how-to-configure-dhcp-server-to-update-dns-zone/6231/6
          # https://kb.isc.org/docs/isc-dhcp-41-manual-pages-dhcpdconf#:~:text=ddns%2Ddomainname%20name%3B
          - set service dhcp-server dynamic-dns-update
          - set service dhcp-server shared-network-name LAN shared-network-parameters "key {{ key_name }} { algorithm {{ algorithm }}; secret {{ secret }}; };"
          - set service dhcp-server shared-network-name LAN shared-network-parameters "ddns-domainname &quot;{{ domainname }}&quot;;"
          - set service dhcp-server shared-network-name LAN shared-network-parameters "ddns-rev-domainname &quot;{{ rev_domainname }}&quot;;"
          - set service dhcp-server shared-network-name LAN shared-network-parameters "zone {{ zonename }} { primary {{ name_server }}; key {{ key_name }}; }"
          - set service dhcp-server shared-network-name LAN shared-network-parameters "zone {{ rev_zonename }} { primary {{ name_server }}; key {{ key_name }}; }"
      vars:
        key_name: keySololab
        algorithm: hmac-sha256
        secret: j/2DR2zkVAyDHL2XjE731sMt9s6cmRhXE6niScAgHA0=
        domainname: infra.sololab.
        rev_domainname: in-addr.arpa.
        zonename: "{{ domainname }}"
        rev_zonename: "255.168.192.{{ rev_domainname }}"
        name_server: 192.168.255.31
      delegate_to: vyos