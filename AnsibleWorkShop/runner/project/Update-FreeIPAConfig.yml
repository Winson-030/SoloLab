# code: language=ansible
---
- hosts: localhost
  gather_facts: false
  vars:
    podman_rootless_play:
      vars_podman_uri:
        scheme_authority: http://d # http://d/ ← (default), https://docs.podman.io/en/latest/_static/api.html?version=v4.5 or create one https://docs.podman.io/en/latest/markdown/podman-system-service.1.html
        api_version: v4.4.1 # v4.0.0 ← (default)
        unix_socket: /run/user/{{ target_host.uid }}/podman/podman.sock # socket file path for podman, e.g. /run/user/1000/podman/podman.sock
    ipa:
      admin: admin
      admin_password: "{{ FreeIPA.app.admin_password }}"
    dns:
      zones:
        - name: infra.sololab.
          dns_update_policy: grant {{ FreeIPA.app.tsig_key_name }} wildcard * ANY;
        - name: 255.168.192.in-addr.arpa.
          dns_update_policy: grant {{ FreeIPA.app.tsig_key_name }} wildcard * ANY;
      # records:
      #   - zone_name: infra.sololab
      #     record_name: ipa-ca
      #     record_type: 'A'
      #     record_value: '192.168.255.11'
  tasks:
    - name: Set IPA DNS zone
      ansible.builtin.include_tasks:
        file: Set-IPADNSZone.yml
      vars:
        ipa_dnszone:
          name: "{{ item.name }}"
          dns_update_policy: "{{ item.dns_update_policy }}"
      loop: "{{ dns.zones }}"
      when:
        - FreeIPA.pod.state == 'present'

    - name: Set IPA DNS server forward policy
      block:
        - name: Get cookie for service ipa
          ansible.builtin.uri:
            url: "https://{{ FreeIPA.pod.hostname }}/ipa/session/login_password"
            validate_certs: false
            method: POST
            headers:
              Referer: https://{{ FreeIPA.pod.hostname }}/ipa
              Accept: text/plain
              Content-Type: "application/x-www-form-urlencoded"
            body_format: form-urlencoded
            body:
              user: "{{ ipa.admin }}"
              password: "{{ ipa.admin_password }}"
            status_code: 200
          register: ipa_session

        - name: Update DNS server forward policy
          ansible.builtin.uri:
            url: "https://{{ FreeIPA.pod.hostname }}/ipa/session/json"
            validate_certs: false
            method: POST
            headers:
              Referer: https://{{ FreeIPA.pod.hostname }}/ipa
              Accept: application/json
              Cookie: "{{ ipa_session.set_cookie }}"
            body_format: json
            body:
              method: dnsserver_mod
              params:
                - - "{{ FreeIPA.pod.hostname }}"
                - idnsforwardpolicy: first
            status_code: 200
            return_content: true

    - name: Enable FreeIPA ACME
      delegate_to: "{{ host }}"
      when:
        - FreeIPA.pod.state == 'present'
      block:
        - name: new podman exec session for freeipa
          ansible.builtin.uri:
            url: "{{ podman_rootless_play.vars_podman_uri.scheme_authority }}/{{ podman_rootless_play.vars_podman_uri.api_version }}/libpod/containers/{{ FreeIPA.pod.container_name }}/exec"
            unix_socket: "{{ podman_rootless_play.vars_podman_uri.unix_socket }}"
            method: POST
            status_code: 201
            body_format: json
            body: "{{ exec_create_request_body_dict }}"
          vars:
            exec_create_request_body_dict:
              # AttachStderr: true
              # AttachStdin: true
              AttachStdout: true
              Cmd:
                - bash
                - -c
                # https://www.freeipa.org/page/V4/ACME#Feature_management
                # - "echo 'P@ssw0rd' | kinit admin; ipa-acme-manage enable"
                - "ipa-acme-manage enable"
              Tty: true
              Privileged: false
              User: root
          register: exec_create_exec_respond

        - name: start podman exec session for freeipa
          ansible.builtin.uri:
            url: http://d/v4.4.1/libpod/exec/{{ exec_create_exec_respond.json.Id }}/start
            unix_socket: /run/user/1001/podman/podman.sock
            method: POST
            status_code: 200
            body_format: json
            body: "{{ exec_start_request_body_dict }}"
            # https://serverfault.com/questions/722852/how-to-check-the-json-response-from-a-uri-request-with-ansible
            return_content: true
          vars:
            exec_start_request_body_dict:
              Detach: false
              Tty: true
          register: exec_start_respond

        - name: debug
          debug:
            # var: exec_start_respond.content.stdout_lines
            msg: "{{ exec_start_respond.content.split('\r\n') }}"

        # - name: update ipa-ca record
        #   community.general.ipa_dnsrecord:
        #     ipa_host: "{{ FreeIPA.pod.hostname }}"
        #     ipa_pass: "{{ ipa.admin_password }}"
        #     validate_certs: false
        #     zone_name: "{{ item.zone_name }}"
        #     record_name: "{{ item.record_name }}"
        #     record_type: "{{ item.record_type }}"
        #     record_value: "{{ item.record_value }}"
        #     state: present
        #   loop: "{{ dns.records }}"

    # https://freeipa.org/page/HowTo/LDAP
    - name: create ldap sysaccount object
      community.general.ldap_entry:
        server_uri: ldap://{{ FreeIPA.pod.hostname }}:389
        bind_dn: "{{ FreeIPA.app.admin_dn }}"
        bind_pw: "{{ FreeIPA.app.admin_password }}"
        dn: "{{ FreeIPA.app.sysaccount_dn }}"
        objectClass:
          - account
          - simpleSecurityObject
        attributes:
          uid: "{{ FreeIPA.app.sysaccount_uid }}"
          userPassword: "{{ FreeIPA.app.sysaccount_password }}"
          passwordExpirationTime: 20380119031407Z
          nsIdleTimeout: 0
        state: present
      when:
        - FreeIPA.pod.state == 'present'

    - name: Set vyos dhcp ddns
      delegate_to: vyos
      block:
        - name: present vyos dhcp ddns
          vyos.vyos.vyos_config:
            lines:
              # https://forum.vyos.io/t/how-to-configure-dhcp-server-to-update-dns-zone/6231/6
              # https://kb.isc.org/docs/isc-dhcp-41-manual-pages-dhcpdconf#:~:text=ddns%2Ddomainname%20name%3B
              - set service dhcp-server dynamic-dns-update
              - "set service dhcp-server shared-network-name LAN shared-network-parameters 'key {{ FreeIPA.app.tsig_key_name }} { algorithm {{ FreeIPA.app.tsig_algorithm }}; secret {{ FreeIPA.app.tsig_secret }}; };'"
              - "set service dhcp-server shared-network-name LAN shared-network-parameters 'ddns-domainname &quot;{{ FreeIPA.app.dns_zonename }}&quot;;'"
              - "set service dhcp-server shared-network-name LAN shared-network-parameters 'ddns-rev-domainname &quot;in-addr.arpa.&quot;;'"
              - "set service dhcp-server shared-network-name LAN shared-network-parameters 'zone {{ FreeIPA.app.dns_zonename }} { primary {{ FreeIPA.pod.hostIP }}; key {{ FreeIPA.app.tsig_key_name }}; }'"
              - "set service dhcp-server shared-network-name LAN shared-network-parameters 'zone {{ FreeIPA.app.dns_rev_zonename }} { primary {{ FreeIPA.pod.hostIP }}; key {{ FreeIPA.app.tsig_key_name }}; }'"
            save: True
          when:
            - FreeIPA.pod.state == 'present'
