# code: language=ansible
---
- hosts: "{{ target_host }}" # kube-2
  gather_facts: yes
  vars: 
    ca:
      hostname: ipa.infra.sololab
    
    podman_rootless_play:
      vars_podman_host: "{{ target_host }}"
      vars_podman_uri:
        scheme_authority: http://d # http://d/ ← (default), https://docs.podman.io/en/latest/markdown/podman-system-service.1.html
        api_version: v4.4.1 # v4.0.0 ← (default)
        unix_socket: /run/user/{{ uid }}/podman/podman.sock # socket file path for podman, e.g. /run/user/1000/podman/podman.sock
      vars_podman_play:
        state: "{{ Traefik_pod_state }}" # absent / present
        timeout: 600
        kube_file: 
          host: localhost
          content: "{{ lookup('ansible.builtin.template', Traefik_kube_file) }}"
        absent:
          query_params:
            force: "{{ Traefik_pod_absent_force }}"
      vars_podman_generate_systemd:
        generate:
          path_params: 
            name: "{{ Traefik_systemd_service }}"
          query_params:
            useName: true
      vars_service:
        podman_pod:
          user_scope:
            skipped: false
            enabled: true
            state: started

    # dns:
    #   key_name: "keySololab"
    #   key_secret: "j/2DR2zkVAyDHL2XjE731sMt9s6cmRhXE6niScAgHA0="
    #   key_algorithm: "hmac-sha256"
    #   server: '192.168.255.31'
    #   zone: infra.sololab
    #   record: traefik
    #   value: '192.168.255.32'
    #   type: 'A'
    #   state: present

  tasks:
    # - name: Get root ca
    #   delegate_to: localhost
    #   block:
    #     - name: run openssl s_client -showcerts
    #       ansible.builtin.shell:
    #         # https://github.com/hashicorp/terraform-provider-aws/issues/10104#issuecomment-565547413
    #         cmd: >
    #           echo | 
    #           openssl s_client -showcerts -connect {{ ipa.hostname }}:443 2>&- | 
    #           tac | 
    #           sed -n '/-----END CERTIFICATE-----/,/-----BEGIN CERTIFICATE-----/p; /-----BEGIN CERTIFICATE-----/q' | 
    #           tac
    #       changed_when: false
    #       register: RootCACert

    #     - name: Set fact Root_CA_Cert
    #       ansible.builtin.set_fact:
    #         Root_CA_Cert: "{{ RootCACert.stdout }}"

    - name: Present traefik file folder
      ansible.builtin.file:
        path: /home/{{ ansible_user }}/traefik
        state: directory
        mode: '0755'

    - name: Invoke podman-rootless-play
      ansible.builtin.include_role:
        name: ansible-podman-rootless-play
      vars: 
        vars_podman_host: "{{ podman_rootless_play.vars_podman_host }}"
        vars_podman_uri: "{{ podman_rootless_play.vars_podman_uri }}"
        vars_podman_play: "{{ podman_rootless_play.vars_podman_play }}"
        vars_podman_generate_systemd: "{{ podman_rootless_play.vars_podman_generate_systemd }}"
        vars_service: "{{ podman_rootless_play.vars_service }}"

    - name: Config reverse proxy
      block:
        # - name: Ensure dns record is present
        #   community.general.nsupdate: "{{ dns }}"
        #   delegate_to: localhost

        - name: render and present route config
          ansible.builtin.copy:
            content: "{{ lookup('ansible.builtin.template', Traefik_ingress_file) }}"
            dest: /home/{{ ansible_user }}/traefik/{{ Traefik_ingress_file | basename | replace('.j2','') }}
          when: 
            - podman_rootless_play.vars_podman_play.state == 'present'

        - name: absent route config
          ansible.builtin.file:
            path: /home/{{ ansible_user }}/traefik/{{ Traefik_ingress_file | basename | replace('.j2','') }}
            state: absent
          when: 
            - podman_rootless_play.vars_podman_play.state == 'absent'