# code: language=ansible
---
- hosts: "{{ target_host }}" # kube-2
  gather_facts: yes
  vars:
    podman_rootless_play:
      vars_podman_host: "{{ target_host }}"
      vars_podman_uri:
        scheme_authority: http://d # http://d/ ← (default), https://docs.podman.io/en/latest/markdown/podman-system-service.1.html
        api_version: v4.4.1 # v4.0.0 ← (default)
        unix_socket: /run/user/{{ uid }}/podman/podman.sock # socket file path for podman, e.g. /run/user/1000/podman/podman.sock
      vars_podman_play:
        state: "{{ GitLab_pod_state }}" # absent / present
        timeout: 600
        kube_file:
          host: localhost
          content: "{{ lookup('ansible.builtin.template', GitLab_kube_file) }}"
        absent:
          query_params:
            force: "{{ GitLab_pod_absent_force }}"
      vars_podman_generate_systemd:
        generate:
          path_params:
            name: "{{ GitLab_systemd_service }}"
          query_params:
            useName: true
      vars_service:
        podman_pod:
          user_scope:
            skipped: false
            enabled: true
            state: started

  tasks:
    - name: Invoke podman-rootless-play
      ansible.builtin.include_role:
        name: ansible-podman-rootless-play
      vars: 
        vars_podman_host: "{{ podman_rootless_play.vars_podman_host }}"
        vars_podman_uri: "{{ podman_rootless_play.vars_podman_uri }}"
        vars_podman_play: "{{ podman_rootless_play.vars_podman_play }}"
        vars_podman_generate_systemd: "{{ podman_rootless_play.vars_podman_generate_systemd }}"
        vars_service: "{{ podman_rootless_play.vars_service }}"

    # https://gitlab.com/gitlab-org/omnibus-gitlab/-/issues/2837#note_898446295
    - name: Disable gitlab public sign-up
      delegate_to: "{{ target_host }}"
      block:
        - name: Test gitlab status 
          ansible.builtin.uri:
            url: http://d/{{ podman_rootless_play.vars_podman_uri.api_version }}/libpod/containers/{{ GitLab_container_name }}/healthcheck
            unix_socket: "{{ podman_rootless_play.vars_podman_uri.unix_socket }}"
            method: GET
            status_code: 200
          register: result
          retries: 10
          until: result.json.Status == "healthy"
          delay: 60
          when: 
            - podman_rootless_play.vars_podman_play.state == 'present'

        - name: new podman exec session
          ansible.builtin.uri:
            url: http://d/{{ api_version }}/libpod/containers/{{ GitLab_container_name }}/exec
            unix_socket: "{{ podman_rootless_play.vars_podman_uri.unix_socket }}"
            method: POST
            status_code: 201
            body_format: json
            body: "{{ exec_create_request_body_dict }}"
          vars:
            api_version: v4.4.1
            container_name: freeipa-freeipa
            exec_create_request_body_dict:
              # AttachStderr: true
              # AttachStdin: true
              AttachStdout: true
              Cmd:
                - bash
                - -c
                - "echo 'UPDATE application_settings SET signup_enabled = false' | gitlab-psql; grep 'Password:' /etc/gitlab/initial_root_password"
              Tty: true
              Privileged: false
              User: root
          register: exec_create_exec_respond
          when: 
            - podman_rootless_play.vars_podman_play.state == 'present'

        - name: start podman exec session
          ansible.builtin.uri:
            url: http://d/v4.4.1/libpod/exec/{{ exec_create_exec_respond.json.Id }}/start
            unix_socket: "{{ podman_rootless_play.vars_podman_uri.unix_socket }}"
            method: POST
            status_code: 200
            body_format: json
            body: "{{ exec_start_request_body_dict }}"
            # https://serverfault.com/questions/722852/how-to-check-the-json-response-from-a-uri-request-with-ansible
            return_content: true
          vars:
            exec_start_request_body_dict:
              Detach: false
              Tty: true
          register: exec_start_respond
          when:
            - podman_rootless_play.vars_podman_play.state == 'present'

        - name: debug
          debug:
            # var: exec_start_respond.content.stdout_lines
            msg: "{{ exec_start_respond.content.split('\r\n') }}"
          when:
            - podman_rootless_play.vars_podman_play.state == 'present'

    - name: Config reverse proxy
      block:
        # - name: Ensure dns record is present
        #   community.general.nsupdate: "{{ dns }}"
        #   delegate_to: localhost

        - name: present route config
          ansible.builtin.copy:
            content: "{{ lookup('ansible.builtin.template', GitLab_ingress_file) }}"
            dest: /home/{{ ansible_user }}/traefik/{{ GitLab_ingress_file | basename | replace('.j2','') }}
          when: 
            - podman_rootless_play.vars_podman_play.state == 'present'

        - name: absent route config
          ansible.builtin.file:
            path: /home/{{ ansible_user }}/traefik/{{ GitLab_ingress_file | basename | replace('.j2','') }}
            state: absent
          when: 
            - podman_rootless_play.vars_podman_play.state == 'absent'