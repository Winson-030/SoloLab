# code: language=ansible
# cd "$(git rev-parse --show-toplevel)\AnsibleWorkShop\runner"
# $private_data_dir = "/tmp/private"
# podman run --rm --userns=keep-id `
#   -v ./:$private_data_dir `
#   -e RUNNER_PLAYBOOK=Update-ConsulConfig.yml `
#   -e ANSIBLE_DISPLAY_SKIPPED_HOSTS=False `
#   localhost/ansible-ee-aio-new `
#   bash -c "ansible-runner run $private_data_dir -vv"
---
- hosts: "{{ lookup('env', 'TARGET') }}"
  gather_facts: no
  vars:
  tasks:
    - name: update vyos dns forward
      delegate_to: vyos
      vyos.vyos.vyos_config:
        lines:
          - "set service dns forwarding domain consul server 192.168.255.11"
        save: True
        
    - name: create consul policy for dns
      community.general.consul_policy:
        host: "{{ Consul.app.fqdn }}"
        port: 443
        scheme: https
        validate_certs: false
        token: "{{ Consul.app.token }}"
        state: present
        name: DNS
        description: Allow anonymous query DNS
        rules: |
          node_prefix "" {
              policy = "read"
          }
          service_prefix "" {
              policy = "read"
          }

    - name: assign consul policy to anonymous token
      ansible.builtin.uri:
        url: https://{{ Consul.app.fqdn }}/v1/acl/token/00000000-0000-0000-0000-000000000002
        validate_certs: false
        method: PUT # DELETE
        headers:
          X-Consul-Token: "{{ Consul.app.token }}"
        body_format: json
        body:
          Description: Consul Agent Token
          Policies:
            - Name: DNS

    - name: consul kv
      ansible.builtin.uri:
        url: "https://{{ Consul.app.fqdn }}/v1/kv/{{ item.key }}"
        validate_certs: false
        method: PUT # DELETE
        headers:
          X-Consul-Token: "{{ Consul.app.token }}"
        body: "{{ item.value }}"
      loop:
        - key: config/client
          # https://docs.ansible.com/ansible/latest/playbook_guide/playbooks_advanced_syntax.html#advanced-playbook-syntax
          value: !unsafe |
            acl {
              tokens {
                # https://developer.hashicorp.com/consul/docs/agent/config/config-files#acl_tokens_default
                default = "e95b599e-166e-7d80-08ad-aee76e7ddf19"
              }
            }
            auto_reload_config = true
            bind_addr = "{{ GetInterfaceIP `eth0` }}"
            datacenter = "dc1"
            data_dir = "/home/podmgr/consul/data"
            encrypt = "qDOPBEr+/oUVeOFQOnVypxwDaHzLrD+lvjo5vCEBbZ0="
            retry_join = [
              "consul.infra.sololab"
            ]

        # https://developer.hashicorp.com/consul/tutorials/get-started-vms/virtual-machine-gs-service-discovery#modify-service-definition-tags
        # we can put consul service definition filei in consul config dir, it will automatic registry the service
        - key: config/systemd
          value: |
            [Unit]
            Description="HashiCorp Consul - A service mesh solution"
            Documentation=https://www.consul.io/
            Wants=network-online.target
            After=network-online.target
            ConditionFileNotEmpty=/home/podmgr/consul/config/consul.hcl

            [Service]
            EnvironmentFile=-/home/podmgr/consul/config/consul.env
            ExecStart=/usr/bin/consul agent -config-dir=/home/podmgr/consul/config/
            ExecReload=/bin/kill --signal HUP $MAINPID
            KillMode=process
            KillSignal=SIGTERM
            Restart=on-failure
            LimitNOFILE=65536

            [Install]
            WantedBy=default.target

        - key: config/script
          value: |
            #! /bin/bash
            mkdir -p /home/podmgr/consul/config/ /home/podmgr/consul/data/

            /usr/bin/curl -s -H "X-Consul-Token: {{ Consul.app.token }}" -X GET -k https://consul.infra.sololab/v1/kv/config/client | \
              jq -r .[0].Value | \
              base64 --decode > /home/podmgr/consul/config/consul.hcl

            /usr/bin/curl -s -H "X-Consul-Token: {{ Consul.app.token }}" \
              -X GET -k https://consul.infra.sololab/v1/kv/config/systemd | \
              jq -r .[0].Value | \
              base64 --decode > /home/podmgr/.config/systemd/user/consul.service

            systemctl daemon-reload --user
            systemctl unmask consul --user
            systemctl enable --now --user consul
            systemctl reload consul --user 

