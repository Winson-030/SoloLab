# code: language=ansible
---
# defaults file for ansible-podman-rootless-play

role_name: ansible-podman-rootless-play

# podman_host:
defaults_podman_host: "{{ ansible_host }}"

podman_host: "{{ vars_podman_host | default(defaults_podman_host) }}"


# podman_uri:
defaults_podman_uri:
  scheme_authority: http://d
  api_version: v4.0.0
  unix_socket:

podman_uri: "{{ defaults_podman_uri | ansible.builtin.combine(vars_podman_uri, recursive=True) }}"


# podman_network
defaults_podman_network:
  state: # present / absent, if empty, related process will skip 
  name: # string, Name of the Network, if empty, related process will skip 
  present:
    request_body:
      name: "{{ vars_podman_network.name }}"

podman_network: "{{ defaults_podman_network | ansible.builtin.combine(vars_podman_network, recursive=True) }}"


# podman_volume
defaults_podman_volume:
  name: # required, skip if empty

podman_volume: "{{ defaults_podman_volume | ansible.builtin.combine(vars_podman_volume, recursive=True) }}"


# podman_play
defaults_podman_play:
  state: # required, skip if empty
  kube_file: 
    host: # hostname of the host where kube file place in, 
    path: # path to the kube file, if empty, podman play process will skip 

podman_play: "{{ defaults_podman_play | ansible.builtin.combine(vars_podman_play, recursive=True) }}"


# podman_generate_systemd
defaults_podman_generate_systemd:
  dest: "{{ ansible_user_dir }}/.config/systemd/user/" # required, skip if empty
  # dest: /home/{{ ansible_env.USER }}/.config/systemd/user/ # required, skip if empty

podman_generate_systemd: "{{ defaults_podman_generate_systemd | ansible.builtin.combine(vars_podman_generate_systemd, recursive=True) }}"


# podman's pod systemd service
defaults_service:
  podman_pod:
    user_scope:
      skipped: true
      enabled: true
      # state: 
  systemd_lingering:
    state: enable

service: "{{ defaults_service | ansible.builtin.combine(vars_service, recursive=True) }}"