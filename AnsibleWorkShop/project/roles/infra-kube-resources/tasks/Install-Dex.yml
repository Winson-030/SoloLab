# code: language=ansible
---
- name: Install Dex
  block:
    - name: Add dex chart repo
      kubernetes.core.helm_repository:
        name: dex
        repo_url: "https://charts.dexidp.io"
      register: dexHelmRepo
      retries: 10
      until: dexHelmRepo is not failed

    - name: Install Dex helm chart
      kubernetes.core.helm:
        kubeconfig: "{{ kubeconfig_path }}"
        chart_ref: dex/dex
        release_name: dex
        release_namespace: dex
        create_namespace: yes
        wait: yes
        values_files:
          - "{{ dex_helm_values_path }}"
      register: dexHelm
      retries: 3
      until: dexHelm is not failed
    
    # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/find_module.html#ansible-collections-ansible-builtin-find-module
    - name: find all templates in directories
      ansible.builtin.find:
        paths: "{{ dex_resources_dir }}"
        file_type: file
        patterns: 'resource*'
        recurse: yes
      register: templates

    - name: Apply Dex additional resources (RBAC for dex "local admin" user)
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig_path }}"
        state: present
        template: "{{ item }}"
        namespace: dex
      with_items: "{{ templates.files | map(attribute='path') }}"
      when: (dexHelm is succeeded)
      

    # - name: Get k3s config values
    #   ansible.builtin.slurp: 
    #     path: /etc/rancher/k3s/config.yaml
    #   register: configb64

    # - name: decode and update values
    #   ansible.builtin.set_fact:
    #     # https://github.com/sangramrath/osodeploy-disconnected/blob/master/openshift-ansible/playbooks/openshift-master/private/set_network_facts.yml
    #     config: "{{ (configb64['content'] | b64decode | from_yaml | combine(newdata, recursive=True)) }}"
    #   vars:
    #     newdata:
    #       kube-apiserver-arg:
    #         - oidc-issuer-url={{ issuer }}
    #         - oidc-client-id={{ staticClientID }}
    #         - oidc-ca-file=/var/lib/rancher/k3s/server/tls/server-ca.crt
    #         - oidc-username-claim=email
    #         - oidc-groups-claim=groups

    # - name: Write yaml file
    #   become: yes
    #   ansible.builtin.copy:
    #     # https://stackoverflow.com/questions/65139989/ansible-how-to-fix-to-nice-yaml-output-quotation-and-line-breaks
    #     content: '{{ config | to_nice_yaml(indent=2) }}'
    #     dest: /etc/rancher/k3s/config.yaml
    #   notify:
    #     - "Restart k3s service"

    # - name: update k3s service config
    #   become: yes
    #   ansible.builtin.blockinfile:
    #     path: /etc/init.d/k3s
    #     insertbefore: '>>/var/log/k3s.log 2>&1"'
    #     block: |2+
    #               '--kube-apiserver-arg' \
    #               'oidc-issuer-url={{ issuer }}' \
    #               '--kube-apiserver-arg' \
    #               'oidc-client-id={{ staticClientID }}' \
    #               '--kube-apiserver-arg' \
    #               'oidc-ca-file=/var/lib/rancher/k3s/server/tls/server-ca.crt' \
    #               '--kube-apiserver-arg' \
    #               'oidc-username-claim=email' \
    #               '--kube-apiserver-arg' \
    #               'oidc-groups-claim=groups' \
    #   when: ansible_service_mgr == "openrc"
    #   notify:
    #     - "Restart k3s service"