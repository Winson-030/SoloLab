# code: language=ansible
---
- hosts: localhost
  gather_facts: false
  vars: 
    keycloak:
      auth:
        auth_client_id: admin-cli
        auth_keycloak_url: https://keycloak.infra.sololab/
        auth_realm: master
        auth_username: admin
        auth_password: password
        validate_certs: false
      realm:
        id: sololab
        realm: sololab
        enabled: true
        display_name: sololab
        state: present
        verify_email: false
      user_federation:
        realm: sololab
        name: sololab-freeipa
        state: present
        provider_id: ldap
        config:
          authType: simple
          bindDn: uid=system,cn=sysaccounts,cn=etc,dc=infra,dc=sololab
          bindCredential: P@ssw0rd
          connectionUrl: ldap://ipa.infra.sololab:389
          editMode: READ_ONLY
          enabled: true
          rdnLDAPAttribute: uid
          trustEmail: true
          usersDn: cn=users,cn=accounts,dc=infra,dc=sololab
          userObjectClasses: inetOrgPerson, organizationalPerson
          usernameLDAPAttribute: uid
          uuidLDAPAttribute: ipaUniqueID
          vendor: rhds
        mappers:
          # https://github.com/keycloak/keycloak-operator/blob/main/deploy/examples/realm/realm_with_ldap.yaml#L92
          - name: "group-group"
            providerId: "group-ldap-mapper"
            config:
              drop.non.existing.groups.during.sync: true
              group.name.ldap.attribute: cn
              group.object.classes: groupOfNames
              groups.ldap.filter: "(cn=svc-*)"
              groups.dn: cn=groups,cn=accounts,dc=infra,dc=sololab
              mode: READ_ONLY
      client:
        minio:
          # https://min.io/docs/minio/linux/operations/external-iam/configure-keycloak-identity-management.html#configure-minio-for-keycloak-identity-management
          realm: sololab
          client_id: minio
          name: minio
          # Always display in UI: on
          always_display_in_console: true
          # Client authentication: on
          public_client: false
          # Standard flow: on
          standard_flow_enabled: true
          # Direct access grants: on
          direct_access_grants_enabled: true
          # root url: Set to ${authBaseUrl}
          root_url: ${authBaseUrl}
          # home url:
          base_url: /realms/sololab/account/
          # valid redirect uri
          redirect_uris: 
            - "*"
          attributes:
            use.jwks.url: true
          state: present
          protocol_mappers:
            # https://github.com/marbindrakon/signal9-lab-gitops/blob/c1d99eae510750ed4d644776395658679a963bef/ansible/roles/sso_client/tasks/main.yml
            - name: role-policy
              protocol: openid-connect
              protocolMapper: oidc-usermodel-client-role-mapper
              config:
                claim.name: policy
                id.token.claim: true
                jsonType.label: String
                multivalued: true
                usermodel.clientRoleMapping.clientId: minio
      role:
        minio:
          realm: sololab
          client_id: minio
          name: readwrite
          state: present
      rolemapping:
        minio:
          state: present
          realm: sololab
          client_id: minio
          group_name: svc-minio-rw
          roles:
            - name: readwrite
  tasks:
    - name: new keycloak realm
      # https://github.com/ansible-collections/community.general/blob/main/tests/integration/targets/keycloak_client/tasks/main.yml
      community.general.keycloak_realm: "{{ keycloak.auth | combine(keycloak.realm) }}"

    - name: new user federation
      community.general.keycloak_user_federation: "{{ keycloak.auth | combine(keycloak.user_federation) }}"

    - name: new client
      community.general.keycloak_client: "{{ keycloak.auth | combine(keycloak.client.minio) }}"

    - name: new client role
      community.general.keycloak_role: "{{ keycloak.auth | combine(keycloak.role.minio) }}"

    - name: new client role mapping
      community.general.keycloak_client_rolemapping: "{{ keycloak.auth | combine(keycloak.rolemapping.minio) }}"
      