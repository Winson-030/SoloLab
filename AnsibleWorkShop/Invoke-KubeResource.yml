# code: language=ansible
---
- hosts: localhost
  gather_facts: true
  vars: 
    kube_node: "kube-1"
    kubeconfig_path: "/var/kubeconfig.yaml"
    ca_crt_path: "/var/lib/rancher/k3s/server/tls/server-ca.crt"
    ca_key_path: "/var/lib/rancher/k3s/server/tls/server-ca.key"
  tasks:
    - name: Prepare kubeconfig
      block:
        - name: Get kubeconfig from remote host
          ansible.builtin.slurp:
            path: /etc/rancher/k3s/k3s.yaml
          register: kubeconfigEncoded
          delegate_to: "{{ kube_node }}"

        - name: Decode kubeconfig
          ansible.builtin.set_fact:
            kubeconfig: "{{ (kubeconfigEncoded['content'] | b64decode | from_yaml) }}"

        - name: Update kubeconfig
          # https://docs.ansible.com/ansible/latest/collections/ansible/utils/update_fact_module.html#ansible-collections-ansible-utils-update-fact-module
          ansible.utils.update_fact:
            updates:
            - path: kubeconfig.clusters[0].cluster.server
              # value: https://192.168.255.31:6443
              # https://stackoverflow.com/questions/40027847/accessing-inventory-host-variable-in-ansible-playbook
              # https://docs.ansible.com/ansible/latest/user_guide/playbooks_vars_facts.html#information-about-ansible-magic-variables
              value: "https://{{ hostvars[kube_node].ansible_host }}:6443"
          register: updated

        - name: Write yaml file
          ansible.builtin.copy:
            content: '{{ updated.kubeconfig | to_nice_yaml(indent=2) }}'
            dest: "{{ kubeconfig_path }}"

    - name: Prepare cluster CA cert and key
      block:
        - name: Get ca crt from {{ hostvars[kube_node].ansible_host }}
          become: yes
          ansible.builtin.slurp:
            path: "{{ ca_crt_path }}"
          register: crtEncoded
          delegate_to: "{{ kube_node }}"
    
        - name: Get ca key from "{{ kube_node }}"
          become: yes
          ansible.builtin.slurp:
            path: "{{ ca_key_path }}"
          register: keyEncoded
          delegate_to: "{{ kube_node }}"

        - name: decode crt
          ansible.builtin.set_fact:
            crt: "{{ crtEncoded['content'] | b64decode }}"
            # crt: "{{ crtEncoded['content'] | b64decode | replace('\n', '')}}"

    - name: Update dex additional resource
      block:
        - name: Get dex local user name(email)
          # https://stackoverflow.com/questions/68729876/get-a-yaml-file-with-http-and-use-it-as-a-variable-in-an-ansible-playbook/68731110#68731110
          # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/include_vars_module.html
          ansible.builtin.include_vars:
            file: "{{ playbook_dir }}/roles/infra-kube-resources/templates/Dex/values.yaml"
            name: dexValue

        - name: set fact (assign value to var)
          ansible.builtin.set_fact: 
            dex_staticUser: "{{ dexValue.config.staticPasswords[0].email }}"
            dex_issuer: "{{ dexValue.config.issuer }}"
            dex_staticClientID: "{{ dexValue.config.staticClients[0].id }}"

        - name: Output OIDC config info
          vars:
            msg: |
              After dex deploy success, please update kubernetes oidc config with below values:
              kube-apiserver-arg:
                - oidc-issuer-url={{ dex_issuer }}
                - oidc-client-id={{ dex_staticClientID }}
                - oidc-ca-file=<the ca crt file path in the control plane node>
                - oidc-username-claim=email
                - oidc-groups-claim=groups
          ansible.builtin.debug: 
            msg: "{{ msg.split('\n') }}"

    - name: Gather kube_node fact
      block:
        - name: get remote ip
          ansible.builtin.setup:
            filter: 
              - 'ansible_eth0'
          delegate_facts: true
          delegate_to: "{{ kube_node }}"
          register: kube_node_facts

        - name: Get kube_node IP address
          ansible.builtin.set_fact:
            cluster_ip: "{{ kube_node_facts.ansible_facts.ansible_eth0.ipv4.address }}"

        - name: output IP address
          ansible.builtin.debug:
            msg: "kube_node cluster_ip is {{ cluster_ip }}"

    # https://github.com/BulntYilmaz/dev/blob/8ab4285ea88bb3be2cdefd83068bee6f9dc3019f/roles/butane/tasks/butane.yml
    - name: Prepare loginapp helm value temp file
      block:
        - name: create temp file
          ansible.builtin.tempfile:
            state: file
          register: loginapp_helm_values

        - name: Copy rendered YAML into temporary file
          ansible.builtin.copy:
            content: "{{ lookup('template', playbook_dir + '/roles/infra-kube-resources/templates/Loginapp/values.yaml.j2') }}"
            dest:    "{{ loginapp_helm_values.path }}"

        - name: set loginapp helm value path
          ansible.builtin.set_fact:
            loginapp_helm_values_path: "{{ loginapp_helm_values.path }}"

    # - name: invoke role
    #   block: 
    #     - name: install k8s resources
    #       ansible.builtin.include_role:
    #         name: infra-kube-resources

    - name: update api server config
      block:
        - name: Get k3s config values
          ansible.builtin.slurp: 
            path: /etc/rancher/k3s/config.yaml
          register: k3sConfigEncoded
          delegate_to: "{{ kube_node }}"

        - name: Decode and update k3s config values
          ansible.builtin.set_fact:
            k3sConfig: "{{ k3sConfigEncoded['content'] | b64decode | from_yaml | combine(newdata, recursive=True) }}"
          vars:
            newdata:
              kube-apiserver-arg:
                - "oidc-issuer-url={{ dex_issuer }}"
                - "oidc-client-id={{ dex_staticClientID }}"
                - "oidc-ca-file={{ ca_crt_path }}"
                - "oidc-username-claim=email"
                - "oidc-groups-claim=groups"

        - name: Write yaml file
          ansible.builtin.copy:
            # https://stackoverflow.com/questions/65139989/ansible-how-to-fix-to-nice-yaml-output-quotation-and-line-breaks
            content: '{{ k3sConfig | to_nice_yaml(indent=2) }}'
            dest: /etc/rancher/k3s/config.yaml