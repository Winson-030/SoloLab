apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vault
spec:
  resources:
    requests:
      storage: 20Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault
data:
  # https://github.com/jace-ys/vault-init/blob/309783a4ca0b88a691da7285200ec933b5738aea/docs/kubernetes/example.yaml
  config.hcl: |
    storage "raft" {
      path = "/vault/data"
      node_id = "vault"
    }

    # https://developer.hashicorp.com/vault/docs/configuration/ui#activating-the-vault-ui
    ui = true

    listener "tcp" {
      address = "0.0.0.0:8200"
      tls_disable = "true"
      # https://developer.hashicorp.com/vault/docs/configuration/listener/tcp#tls_cert_file
      # tls_cert_file = "/vault/data/sololab_vault.crt"
      # tls_key_file = "/vault/data/sololab_vault.key"
    }

    api_addr = "http://127.0.0.1:8200"

    cluster_addr = "http://127.0.0.1:8201"
---
apiVersion: v1
kind: Secret
metadata:
  name:  vault-unseal
type: Opaque
stringData:
  Unseal-Vault.sh: |
    # https://nikhilism.com/post/2016/understanding-ansible-jinja2-default-filter/
    # https://www.freecodecamp.org/news/truthy-and-falsy-values-in-python/
    keys="
    {{ vault_unseal_keys_b64 | default('', true) | indent(width=4) }}
    "
    
    # https://blog.csdn.net/Jerry_1126/article/details/51835119
    length=$(echo -n $keys | wc -c)
    echo "length $length"
    
    export VAULT_ADDR="http://127.0.0.1:8200"
    export VAULT_TOKEN="{{ vault_root_token | default('', true) }}"
    
    if [ "$length" -le 2 ]; 
    then
        echo "no unseal key"
    else
        for i in $keys
        do
            # echo "it's $i"
            vault operator unseal $i
            # sleep 1
        done
    fi
---
apiVersion: v1
kind: Pod
metadata:
  name: vault
  labels:
    name: vault
spec:
  # https://docs.podman.io/en/latest/markdown/podman-kube-play.1.html
  # https://github.com/docker-library/docs/tree/master/vault
  containers:
    - name: vault
      image: docker.io/hashicorp/vault:1.13
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "256Mi"
          cpu: "500m"
      securityContext:
        capabilities:
          add:
            - "IPC_LOCK"
      ports:
        - name: server
          containerPort: 8200
      # https://developer.hashicorp.com/vault/tutorials/day-0/docker-container-agents#configure-and-run-a-vault-server
      command:
        - vault
      args:
        - server
        - -config=/vault/config/config.hcl
      # https://www.cnblogs.com/peng-zone/p/16700401.html
      startupProbe:
        exec:
          command:
            - sh
            - /mnt/unseal/Unseal-Vault.sh
        successThreshold: 1
        initialDelaySeconds: 5
        periodSeconds: 1
      livenessProbe:
        exec:
          command:
            - sh
            - -c
            - "wget -q -S -O - http://127.0.0.1:8200/v1/sys/health"
        initialDelaySeconds: 30
        periodSeconds: 120
      volumeMounts:
        - name: vault_config
          mountPath: /vault/config/config.hcl
          subPath: config.hcl
        - name: vault_data
          mountPath: /vault/data
        - name: unseal_script
          mountPath: /mnt/unseal/
  volumes:
    - name: vault_config
      # https://kubernetes.io/docs/concepts/storage/volumes/#configmap
      configMap:
        name: vault
        items:
          - key: config.hcl
            path: config.hcl
    - name: vault_data
      persistentVolumeClaim:
        claimName: vault
    - name: unseal_script
      secret:
        secretName: vault-unseal
        
  restartPolicy: Never