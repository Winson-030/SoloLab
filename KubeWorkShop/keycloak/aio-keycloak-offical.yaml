apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: keycloak-postgresql-pvc
spec:
  resources:
    requests:
      storage: 20Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteOnce
---
apiVersion: v1
kind: Pod
metadata:
  name: keycloak
  labels:
    name: keycloak
spec:
  containers:
    # - name: postgresql-bitnami
    #   # https://hub.docker.com/r/bitnami/postgresql/tags?page=1
    #   image: docker.io/bitnami/postgresql:15
    #   imagePullPolicy: IfNotPresent
    #   resources:
    #     limits:
    #       memory: "128Mi"
    #       cpu: "500m"
    #   ports:
    #     - name: postgresql
    #       containerPort: 5432
    #   env:
    #     # https://github.com/bitnami/containers/tree/main/bitnami/postgresql#creating-a-database-user-on-first-run
    #     - name: POSTGRESQL_USERNAME
    #       value: keycloak
    #     - name: POSTGRESQL_PASSWORD
    #       value: password
    #     - name: POSTGRESQL_DATABASE
    #       value: keycloak
    #     - name: POSTGRESQL_LOG_TIMEZONE
    #       value: Asia/Shanghai
    #   volumeMounts:
    #     - name:  postgresql_data
    #     # https://github.com/bitnami/containers/tree/main/bitnami/postgresql#persisting-your-database
    #       mountPath: /bitnami/postgresql

    - name: postgresql-docker
      # https://hub.docker.com/_/postgres/tags?page=1
      image: docker.io/library/postgres:15-alpine
      imagePullPolicy: IfNotPresent
      securityContext:
        privileged: true
      resources:
        limits:
          memory: "128Mi"
          cpu: "500m"
      ports:
        - name: postgresql
          containerPort: 5432
      env:
        # https://github.com/docker-library/docs/tree/master/postgres#environment-variables
        - name: POSTGRES_USER
          value: keycloak
        - name: POSTGRES_PASSWORD
          value: password
        - name: POSTGRES_DB
          value: keycloak
      volumeMounts:
        - name: postgresql_data
          # https://github.com/docker-library/docs/tree/master/postgres#pgdata
          mountPath: /var/lib/postgresql/data

    - name: keycloak
      # https://www.keycloak.org/server/containers#_running_a_standard_keycloak_container
      # https://quay.io/repository/keycloak/keycloak?tab=tags
      image: quay.io/keycloak/keycloak:21.0
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          memory: "512Mi"
          cpu: "1000m"
      ports:
        - name: http
          containerPort: 8080
        # - name: https
        #   containerPort: 8443
      # https://github.com/zak905/extending-keycloak-udemy-course/blob/fb271e99b7091ab39fcca76ef21387bdbb1407ce/docker-compose.yaml
      env:
        # https://www.keycloak.org/server/configuration#_setup_of_the_initial_admin_user
        - name: KEYCLOAK_ADMIN
          value: admin
        - name: KEYCLOAK_ADMIN_PASSWORD
          value: password

        # https://www.keycloak.org/server/all-config#_database
        - name: KC_DB # db
          value: postgres
        - name: KC_DB_URL_HOST # db-url-host
          value: keycloak
        - name: KC_DB_URL_DATABASE # db-url-database
          value: keycloak
        - name: KC_DB_USERNAME # db-username
          value: keycloak
        - name: KC_DB_PASSWORD # db-password
          value: password

        # https://www.keycloak.org/server/all-config#_proxy
        # https://www.keycloak.org/server/reverseproxy#_proxy_modes
        - name: KC_PROXY # --proxy
          value: edge

        # https://www.keycloak.org/server/containers#_relevant_options
        # https://www.keycloak.org/server/features#_supported_features
        - name: KC_FEATURES
          value: admin-api,admin2,token-exchange

        # https://www.keycloak.org/server/configuration-production
        # https://www.keycloak.org/server/enabletls#_configuring_tls_in_keycloak
        # production mode need hostname and tls cert
        # hostname will force redirect url to the fqdn of
        # hostname value in browser
        # https://www.keycloak.org/server/all-config#category-hostname
        # - name: KC_HOSTNAME
        #   value: keycloak

        # ref: https://github.com/codecentric/helm-charts/tree/master/charts/keycloakx
        # dynamically resolving the hostname from request headers.
        - name: KC_HOSTNAME_STRICT
          value: "false"

        # Enables the HTTP listener
        - name: KC_HTTP_ENABLED
          value: "true"

        # https://stackoverflow.com/questions/72426072/how-to-configure-keycloak-18-running-http-only-in-production-mode
        # https://github.com/keycloak/keycloak/issues/13270
        # When using the hostname option the server is going to resolve the HTTP scheme, port, and path, automatically so that:
        # https scheme is used unless you set hostname-strict-https=false
        - name: KC_HOSTNAME_STRICT_HTTPS
          value: "false"

        # - name: KC_HTTPS_CERTIFICATE_FILE
        # value: /path/to/certfile.pem
        # - name: KC_HTTPS_CERTIFICATE_KEY_FILE
        #   value: /path/to/keyfile.pem

        # the way to import realm
        # 1. use JAVA_OPTS_APPEND
        # - name: JAVA_OPTS_APPEND
        #   value: -Dkeycloak.import=/opt/keycloak/data/import/freeipa-realm.json

        # 2. use --import-realm + data in /opt/keycloak/data/import/
      args:
        - "start"
        # - "start-dev"
        # https://www.keycloak.org/server/importExport#_importing_a_realm_during_startup
      #   - '--import-realm'
      # volumeMounts:
      #   - name: keycloak_config
      #     mountPath: /opt/keycloak/data/import/master-realm.json
      #     subPath: master-realm.json
  volumes:
    - name: postgresql_data
      persistentVolumeClaim:
        claimName: keycloak-postgresql-pvc
    # - name: keycloak_config
    #   configMap:
    #     name: keycloak-keycloak-cm
    #     items:
    #       - key: master-realm.json
    #         path: master-realm.json
  restartPolicy: Never
